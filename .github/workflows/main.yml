name: Code Checker

on: 
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  env:
  DOCKERHUB_USERNAME: mukredize

jobs:
  check-code:
    name: Lint code base
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Checkout code
        uses: actions/checkout@v3

      - name: PEP8 Action
        uses: quentinguidee/pep8-action@v1
        # with:
        #   arguments: "--disable=E0611 --disable=C0116 --disable=C0114"
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  build-and-push:
    needs: check-code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create .env file
      run: |
          echo "API_KEY=${{ secrets.OPENAI_API_KEY }}" > app/.env
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Setup docker-compose
      uses: KengoTODA/actions-setup-docker-compose@v1.2.2
  
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Build and push Docker images
      working-directory: app
      run: |
        ls -la
        # Build images
        # docker-compose build
        docker-compose build --tag mukredize/frontend:v1.0 --tag mukredize/backend:v1.0
        docker-compose push
      
        # # Tag images
        # docker tag your_app_backend:latest ${{ env.DOCKERHUB_USERNAME }}/your_app:backend
        # docker tag your_app_frontend:latest ${{ env.DOCKERHUB_USERNAME }}/your_app:frontend
      
        # # Push images
        # docker push ${{ env.DOCKERHUB_USERNAME }}/your_app:backend
        # docker push ${{ env.DOCKERHUB_USERNAME }}/your_app:frontend
      
    - name: Verify pushed images
      run: |
        docker images
  # build-and-push:
  #   needs: check-code
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build and push Docker Compose images
  #       working-directory: ./app
  #       env:
  #         OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  #       run: |
  #         docker-compose build
  #         docker-compose push