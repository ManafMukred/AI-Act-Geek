name: Code Checker

on: 
  workflow_dispatch:
  push:
    branches: [ main ]

env:

  DOCKERHUB_USERNAME: mukredize

jobs:
  check-code:
    name: Lint code base
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - name: Checkout code
        uses: actions/checkout@v3

      - name: PEP8 Action
        uses: quentinguidee/pep8-action@v1

        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  build-and-push:
    needs: check-code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create .env file
      run: |
          echo "API_KEY=${{ secrets.OPENAI_API_KEY }}" > app/.env
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Setup docker-compose
      uses: KengoTODA/actions-setup-docker-compose@v1.2.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Build and push Docker images
      working-directory: app
      run: |
        ls -la
        # Build & push with docker-compose
        docker-compose build
        docker-compose push
      
        # OR tag then push each image individually with docker

        # docker tag app-frontend:latest ${{ env.DOCKERHUB_USERNAME }}/ai-act-geek:backend
        # docker tag app-frontend:latest ${{ env.DOCKERHUB_USERNAME }}/ai-act-geek:frontend
        # docker push ${{ env.DOCKERHUB_USERNAME }}/ai-act-geek:backend
        # docker push ${{ env.DOCKERHUB_USERNAME }}/ai-act-geek:frontend
      
    - name: Verify pushed images
      run: |
        docker images